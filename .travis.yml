---
sudo: required
dist: trusty
language: ruby
rvm:
  - 2.3.0
cache:
  directories:
  - vendor/bundle

install:
  - gem install travis -v 1.8.2 --no-rdoc --no-ri
  - bundle install
  - wget https://releases.hashicorp.com/terraform/0.7.0/terraform_0.7.0_linux_amd64.zip -O /tmp/terraform.zip
  - sudo unzip -d /usr/local/bin/ /tmp/terraform.zip

before_script:
  - export TF_VAR_aws_account_id=$(bundle exec ruby scripts/get_account_id.rb)
  - export TF_VAR_aws_region=${AWS_DEFAULT_REGION}
script:
  - echo
after_success:
  # If branch name matched with deploy/xxx, then continue.
  - export ENV=$(echo "${TRAVIS_BRANCH}" | perl -ne "print $& if /(?<=deploy\/).*/")
  - test -z "${ENV}" && (echo "${TRAVIS_BRANCH} is not a branch to deploy." && exit 0)

  # Enable terraform remote
  - scripts/terraform-enable-remote.sh

  # Save current output to use it later
  - terraform output | tee out_before

  # Plan and apply
  - scripts/terraform-wrapper.sh plan || exit 1
  - scripts/terraform-wrapper.sh apply || exit 1

  # Remove unused amis
  - bundle exec ruby scripts/remove_unused_and_rotated_amis.rb

  # Replace instances if web_ami was updated.
  - terraform output | tee out_after
  - lines=$(cat out_before out_after | grep 'web_ami' | uniq | wc -l)
  - asg_name=$(terraform output web_autoscaling_group_name)
  - test ${lines} -eq 2 && bundle exec ruby scripts/replace_old_instances.rb ${asg_name}

