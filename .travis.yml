---
sudo: required
dist: trusty
language: python
cache: pip
python:
- '2.7'

install:
  # Install AWS CLI
  - pip install awscli
  - aws --version
  # Install Terraform
  - wget https://releases.hashicorp.com/terraform/0.7.7/terraform_0.7.7_linux_amd64.zip -O /tmp/terraform.zip
  - sudo unzip -d /usr/local/bin/ /tmp/terraform.zip

before_script:
  # Determine environment
  - export ENV=$(echo "${TRAVIS_BRANCH}" | perl -ne "print $& if /(?<=deploy\/).*/")
script:
  - |
    if [ -z "${ENV}" ]; then
      echo "${TRAVIS_BRANCH} is not a branch to deploy."
    else
      source ./scripts/switch-role.sh
      ./terraform-env.sh ${ENV} get
      ./terraform-env.sh ${ENV} plan
    fi

before_deploy:
  # Save current web_ami to use it later
  - web_ami_before=$(./terraform-env.sh ${ENV} output web_ami)

deploy:
  - provider: script
    script: ./terraform-env.sh ${ENV} apply
    skip_cleanup: true
    on:
      branch: deploy/*

after_deploy:
  # Publish to SNS Topic if web_ami was updated.
  - web_ami_after=$(./terraform-env.sh ${ENV} output web_ami)
  - account_number=$(aws sts get-caller-identity --output text --query 'Account')
  - |
    if [ ${web_ami_after} != ${web_ami_before} ]; then
      aws sns publish --topic-arn "arn:aws:sns:${AWS_DEFAULT_REGION}:${account_number}:web_image_updated"
    fi
